//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/artur/RiderProjects/Markdown-to-LaTeX/Markdown-to-LaTeX/Markdown.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MarkdownParsing {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="Markdown"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMarkdownListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDocument([NotNull] Markdown.DocumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDocument([NotNull] Markdown.DocumentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>atxHeading</c>
	/// labeled alternative in <see cref="Markdown.heading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtxHeading([NotNull] Markdown.AtxHeadingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>atxHeading</c>
	/// labeled alternative in <see cref="Markdown.heading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtxHeading([NotNull] Markdown.AtxHeadingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>setextHeading</c>
	/// labeled alternative in <see cref="Markdown.heading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetextHeading([NotNull] Markdown.SetextHeadingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>setextHeading</c>
	/// labeled alternative in <see cref="Markdown.heading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetextHeading([NotNull] Markdown.SetextHeadingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>emptyHeading</c>
	/// labeled alternative in <see cref="Markdown.heading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyHeading([NotNull] Markdown.EmptyHeadingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>emptyHeading</c>
	/// labeled alternative in <see cref="Markdown.heading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyHeading([NotNull] Markdown.EmptyHeadingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.headingStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeadingStart([NotNull] Markdown.HeadingStartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.headingStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeadingStart([NotNull] Markdown.HeadingStartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.setextEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetextEnd([NotNull] Markdown.SetextEndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.setextEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetextEnd([NotNull] Markdown.SetextEndContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.horizontalLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHorizontalLine([NotNull] Markdown.HorizontalLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.horizontalLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHorizontalLine([NotNull] Markdown.HorizontalLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.hLineDBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHLineDBegin([NotNull] Markdown.HLineDBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.hLineDBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHLineDBegin([NotNull] Markdown.HLineDBeginContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.hLineUBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHLineUBegin([NotNull] Markdown.HLineUBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.hLineUBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHLineUBegin([NotNull] Markdown.HLineUBeginContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.hLineSBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHLineSBegin([NotNull] Markdown.HLineSBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.hLineSBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHLineSBegin([NotNull] Markdown.HLineSBeginContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.indent3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndent3([NotNull] Markdown.Indent3Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.indent3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndent3([NotNull] Markdown.Indent3Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.indent2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndent2([NotNull] Markdown.Indent2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.indent2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndent2([NotNull] Markdown.Indent2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.indent1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndent1([NotNull] Markdown.Indent1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.indent1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndent1([NotNull] Markdown.Indent1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.fencedCode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFencedCode([NotNull] Markdown.FencedCodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.fencedCode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFencedCode([NotNull] Markdown.FencedCodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.indentedCodeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndentedCodeBlock([NotNull] Markdown.IndentedCodeBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.indentedCodeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndentedCodeBlock([NotNull] Markdown.IndentedCodeBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.indentedCode1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndentedCode1([NotNull] Markdown.IndentedCode1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.indentedCode1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndentedCode1([NotNull] Markdown.IndentedCode1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList([NotNull] Markdown.ListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList([NotNull] Markdown.ListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.list1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList1([NotNull] Markdown.List1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.list1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList1([NotNull] Markdown.List1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.list2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList2([NotNull] Markdown.List2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.list2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList2([NotNull] Markdown.List2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.list3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList3([NotNull] Markdown.List3Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.list3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList3([NotNull] Markdown.List3Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iList3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIList3([NotNull] Markdown.IList3Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iList3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIList3([NotNull] Markdown.IList3Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iList2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIList2([NotNull] Markdown.IList2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iList2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIList2([NotNull] Markdown.IList2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iList1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIList1([NotNull] Markdown.IList1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iList1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIList1([NotNull] Markdown.IList1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iList0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIList0([NotNull] Markdown.IList0Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iList0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIList0([NotNull] Markdown.IList0Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iListItem3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIListItem3([NotNull] Markdown.IListItem3Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iListItem3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIListItem3([NotNull] Markdown.IListItem3Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iListItem2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIListItem2([NotNull] Markdown.IListItem2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iListItem2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIListItem2([NotNull] Markdown.IListItem2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iListItem1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIListItem1([NotNull] Markdown.IListItem1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iListItem1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIListItem1([NotNull] Markdown.IListItem1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iListItem0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIListItem0([NotNull] Markdown.IListItem0Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iListItem0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIListItem0([NotNull] Markdown.IListItem0Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.iListBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIListBegin([NotNull] Markdown.IListBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.iListBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIListBegin([NotNull] Markdown.IListBeginContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eList3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEList3([NotNull] Markdown.EList3Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eList3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEList3([NotNull] Markdown.EList3Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eList2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEList2([NotNull] Markdown.EList2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eList2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEList2([NotNull] Markdown.EList2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eList1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEList1([NotNull] Markdown.EList1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eList1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEList1([NotNull] Markdown.EList1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eList0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEList0([NotNull] Markdown.EList0Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eList0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEList0([NotNull] Markdown.EList0Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eListItem3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEListItem3([NotNull] Markdown.EListItem3Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eListItem3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEListItem3([NotNull] Markdown.EListItem3Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eListItem2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEListItem2([NotNull] Markdown.EListItem2Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eListItem2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEListItem2([NotNull] Markdown.EListItem2Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eListItem1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEListItem1([NotNull] Markdown.EListItem1Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eListItem1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEListItem1([NotNull] Markdown.EListItem1Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eListItem0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEListItem0([NotNull] Markdown.EListItem0Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eListItem0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEListItem0([NotNull] Markdown.EListItem0Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.eListBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEListBegin([NotNull] Markdown.EListBeginContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.eListBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEListBegin([NotNull] Markdown.EListBeginContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.blockQuote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockQuote([NotNull] Markdown.BlockQuoteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.blockQuote"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockQuote([NotNull] Markdown.BlockQuoteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.blockQuoteLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockQuoteLine([NotNull] Markdown.BlockQuoteLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.blockQuoteLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockQuoteLine([NotNull] Markdown.BlockQuoteLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.emptyBlockQuoteLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyBlockQuoteLine([NotNull] Markdown.EmptyBlockQuoteLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.emptyBlockQuoteLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyBlockQuoteLine([NotNull] Markdown.EmptyBlockQuoteLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.blockQuoteStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockQuoteStart([NotNull] Markdown.BlockQuoteStartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.blockQuoteStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockQuoteStart([NotNull] Markdown.BlockQuoteStartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTable([NotNull] Markdown.TableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.table"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTable([NotNull] Markdown.TableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.headerRow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeaderRow([NotNull] Markdown.HeaderRowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.headerRow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeaderRow([NotNull] Markdown.HeaderRowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.contentRow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContentRow([NotNull] Markdown.ContentRowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.contentRow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContentRow([NotNull] Markdown.ContentRowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.cellContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCellContent([NotNull] Markdown.CellContentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.cellContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCellContent([NotNull] Markdown.CellContentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.separatorRow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeparatorRow([NotNull] Markdown.SeparatorRowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.separatorRow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeparatorRow([NotNull] Markdown.SeparatorRowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.separatorContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeparatorContent([NotNull] Markdown.SeparatorContentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.separatorContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeparatorContent([NotNull] Markdown.SeparatorContentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.imageLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImageLine([NotNull] Markdown.ImageLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.imageLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImageLine([NotNull] Markdown.ImageLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.linkLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLinkLine([NotNull] Markdown.LinkLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.linkLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLinkLine([NotNull] Markdown.LinkLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.textLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextLine([NotNull] Markdown.TextLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.textLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextLine([NotNull] Markdown.TextLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.requiredText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRequiredText([NotNull] Markdown.RequiredTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.requiredText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRequiredText([NotNull] Markdown.RequiredTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.optionalText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionalText([NotNull] Markdown.OptionalTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.optionalText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionalText([NotNull] Markdown.OptionalTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.displayText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDisplayText([NotNull] Markdown.DisplayTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.displayText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDisplayText([NotNull] Markdown.DisplayTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.linkText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLinkText([NotNull] Markdown.LinkTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.linkText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLinkText([NotNull] Markdown.LinkTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.urlText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUrlText([NotNull] Markdown.UrlTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.urlText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUrlText([NotNull] Markdown.UrlTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.headingText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeadingText([NotNull] Markdown.HeadingTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.headingText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeadingText([NotNull] Markdown.HeadingTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.fencedText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFencedText([NotNull] Markdown.FencedTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.fencedText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFencedText([NotNull] Markdown.FencedTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.codeText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeText([NotNull] Markdown.CodeTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.codeText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeText([NotNull] Markdown.CodeTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.link"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLink([NotNull] Markdown.LinkContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.link"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLink([NotNull] Markdown.LinkContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.urlLink"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUrlLink([NotNull] Markdown.UrlLinkContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.urlLink"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUrlLink([NotNull] Markdown.UrlLinkContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="Markdown.textLink"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextLink([NotNull] Markdown.TextLinkContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="Markdown.textLink"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextLink([NotNull] Markdown.TextLinkContext context);
}
} // namespace MarkdownParsing
